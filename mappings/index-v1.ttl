@prefix crdt: <https://kkalass.github.io/solid_crdt_sync/vocab/crdt#> .
@prefix sync: <https://kkalass.github.io/solid_crdt_sync/vocab/sync#> .
@prefix idx: <https://kkalass.github.io/solid_crdt_sync/vocab/idx#> .
@prefix mappings: <https://kkalass.github.io/solid_crdt_sync/mappings/> .

# CRDT mappings for index documents (FullIndex, GroupIndexTemplate, GroupIndex)
# Used by framework for index metadata synchronization

<> a sync:DocumentMapping;
   # Import base CRDT framework
   sync:imports ( mappings:crdt-v1 ) ;
   # Define index-specific class mappings
   sync:classMapping ( <#full-index> <#group-index-template> <#group-index> <#indexed-property> <#modulo-hash-sharding> ) .

# FullIndex documents
<#full-index> a sync:ClassMapping;
   sync:appliesToClass idx:FullIndex;
   sync:rule
     [ sync:predicate idx:indexesClass; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:indexedProperty; crdt:mergeWith crdt:OR_Set ],
     [ sync:predicate idx:hasShard; crdt:mergeWith crdt:OR_Set ],
     [ sync:predicate idx:shardingAlgorithm; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:readBy; crdt:mergeWith crdt:OR_Set ],
     [ sync:predicate idx:deprecatedAt; crdt:mergeWith crdt:LWW_Register ] .

# GroupIndexTemplate documents
<#group-index-template> a sync:ClassMapping;
   sync:appliesToClass idx:GroupIndexTemplate;
   sync:rule
     [ sync:predicate idx:indexesClass; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:indexedProperty; crdt:mergeWith crdt:OR_Set ],
     [ sync:predicate idx:shardingAlgorithm; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:groupedBy; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:readBy; crdt:mergeWith crdt:OR_Set ],
     [ sync:predicate idx:deprecatedAt; crdt:mergeWith crdt:LWW_Register ],
     [ sync:predicate idx:populationState; crdt:mergeWith crdt:LWW_Register ],
     [ sync:predicate idx:hasPopulatingShard; crdt:mergeWith crdt:OR_Set ] .

# GroupIndex documents
<#group-index> a sync:ClassMapping;
   sync:appliesToClass idx:GroupIndex;
   sync:rule
     [ sync:predicate idx:basedOn; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:readBy; crdt:mergeWith crdt:OR_Set ],
     [ sync:predicate idx:populationState; crdt:mergeWith crdt:LWW_Register ],
     [ sync:predicate idx:deprecatedAt; crdt:mergeWith crdt:LWW_Register ] .

# IndexedProperty configuration objects within indices
<#indexed-property> a sync:ClassMapping;
   sync:appliesToClass idx:IndexedProperty;
   sync:rule
     [ sync:predicate idx:property; crdt:mergeWith crdt:Immutable ],  # Which property to index
     [ sync:predicate idx:readBy; crdt:mergeWith crdt:OR_Set ] .      # Which installations read this property


# ModuloHashSharding algorithm configuration
<#modulo-hash-sharding> a sync:ClassMapping;
   sync:appliesToClass idx:ModuloHashSharding;
   sync:rule
     [ sync:predicate idx:hashAlgorithm; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:numberOfShards; crdt:mergeWith crdt:Immutable ],
     [ sync:predicate idx:configVersion; crdt:mergeWith crdt:LWW_Register ],
     [ sync:predicate idx:autoScaleThreshold; crdt:mergeWith crdt:LWW_Register ] .