@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix crdt: <https://kkalass.github.io/solid_crdt_sync/vocab/crdt#> .
@prefix sync: <https://kkalass.github.io/solid_crdt_sync/vocab/sync#> .
@prefix mappings: <https://kkalass.github.io/solid_crdt_sync/mappings/> .

# Standard CRDT library for framework components
# This DocumentMapping provides all essential CRDT mappings that most applications need

<> a sync:DocumentMapping;
   # Define class mappings for framework components
   sync:classMapping ( <#managed-document> <#statement> ) ;
   # Define predicate mappings for framework components (ordered list)
   sync:predicateMapping ( <#clock-mappings> <#deletion-mappings> ) .

# ManagedDocument is the wrapper for all CRDT-managed resources
<#managed-document> a sync:ClassMapping;
   sync:appliesToClass sync:ManagedDocument;
   sync:rule
     [ sync:predicate sync:primaryTopic; crdt:mergeWith crdt:Immutable ],  # The resource being managed
     [ sync:predicate sync:isGovernedBy; crdt:mergeWith crdt:Immutable ],  # Merge contract reference
     [ sync:predicate sync:managedResourceType; crdt:mergeWith crdt:Immutable ],  # Resource type for discovery
     [ sync:predicate idx:belongsToIndexShard; crdt:mergeWith crdt:OR_Set ] .  # Index shard memberships

# Merge contract for RDF reified statements used as tombstones in CRDT sets
<#statement> a sync:ClassMapping;
   sync:appliesToClass rdf:Statement;
   sync:rule
     # The subject, predicate, and object of the reified statement are immutable identifiers
     [ sync:predicate rdf:subject; crdt:mergeWith crdt:LWW_Register ],
     [ sync:predicate rdf:predicate; crdt:mergeWith crdt:LWW_Register ],
     [ sync:predicate rdf:object; crdt:mergeWith crdt:LWW_Register ] .

# Standard mapping for predicates of Hybrid Logical Clock entries (typeless blank nodes)  
<#clock-mappings> a sync:PredicateMapping;
   sync:rule
     [ sync:predicate crdt:installationId; crdt:mergeWith crdt:LWW_Register; sync:isIdentifying true ],
     [ sync:predicate crdt:logicalTime; crdt:mergeWith crdt:LWW_Register ],
     [ sync:predicate crdt:physicalTime; crdt:mergeWith crdt:LWW_Register ] .

# Standard mapping for deletion semantics across all CRDT contexts
<#deletion-mappings> a sync:PredicateMapping;
   sync:rule
     # Global deletion semantics - applies to all contexts where crdt:deletedAt is used
     # Supports both resource tombstones and property tombstones with unified OR-Set semantics
     [ sync:predicate crdt:deletedAt; crdt:mergeWith crdt:OR_Set ] .