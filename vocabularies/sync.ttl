@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sync: <https://kkalass.github.io/solid_crdt_sync/vocab/sync#> .

# --- Ontology Definition ---

<https://kkalass.github.io/solid_crdt_sync/vocab/sync> a owl:Ontology;
    rdfs:label "Synchronization Vocabulary for CRDT Sync";
    rdfs:comment "A vocabulary to describe the high-level, application-agnostic merge contract for a resource." .

# --- Class Definitions ---

sync:Mapping a rdfs:Class;
    rdfs:label "Mapping";
    rdfs:comment "An abstract base class for a resource that defines a set of merge rules." .

sync:ClassMapping a rdfs:Class;
    rdfs:label "Class Mapping";
    rdfs:comment "A resource that defines the merge behavior for a specific class of data (e.g., schema:Recipe).";
    rdfs:subClassOf sync:Mapping .

sync:DocumentMapping a rdfs:Class;
    rdfs:label "Document Mapping";
    rdfs:comment "A resource that defines the complete merge behavior for all resources within a document, by importing other DocumentMappings and defining local ClassMappings and PredicateMappings.";
    rdfs:subClassOf sync:Mapping .

sync:PredicateMapping a rdfs:Class;
    rdfs:label "Predicate Mapping";
    rdfs:comment "A resource that defines merge behavior for resources based on the predicates they appear with, useful for typeless blank nodes and predicate-based identification patterns.";
    rdfs:subClassOf sync:Mapping .


sync:Rule a rdfs:Class;
    rdfs:label "Mapping Rule";
    rdfs:comment "A declarative rule that links a specific predicate/property to a CRDT merge algorithm." .

# --- Property Definitions ---

sync:isGovernedBy a rdf:Property;
    rdfs:label "is governed by";
    rdfs:comment "Links a data or index resource to the public rules file that defines its merge behavior.";
    rdfs:domain rdfs:Resource;
    rdfs:range rdfs:Resource . # The IRI of the mapping file

sync:appliesToClass a rdf:Property;
    rdfs:label "applies to class";
    rdfs:comment "Links a Mapping to the class of resource it defines rules for.";
    rdfs:domain sync:Mapping;
    rdfs:range rdfs:Class .

sync:appliesToPredicate a rdf:Property;
    rdfs:label "applies to predicate";
    rdfs:comment "Links a Mapping to a specific predicate, allowing mapping of resources that appear as objects of this predicate regardless of their type. Useful for typeless blank nodes.";
    rdfs:domain sync:Mapping;
    rdfs:range rdf:Property .


sync:documentMapping a rdf:Property;
    rdfs:label "document mapping";
    rdfs:comment "Imports a complete DocumentMapping library, inheriting all its class and predicate mappings. Used for importing standard mapping libraries like CRDT or RDF vocabularies.";
    rdfs:domain sync:DocumentMapping;
    rdfs:range sync:DocumentMapping .

sync:classMapping a rdf:Property;
    rdfs:label "class mapping";
    rdfs:comment "References a ClassMapping (either local or external) that defines merge behavior for a specific class of resources.";
    rdfs:domain sync:DocumentMapping;
    rdfs:range sync:ClassMapping .

sync:predicateMapping a rdf:Property;
    rdfs:label "predicate mapping";
    rdfs:comment "References a PredicateMappings resource (either local or external) that defines merge behavior for resources based on predicates.";
    rdfs:domain sync:DocumentMapping;
    rdfs:range sync:PredicateMapping .

sync:rule a rdf:Property;
    rdfs:label "mapping rule";
    rdfs:comment "Links a PredicateMappings or ClassMapping to a specific mapping Rule for one of its predicates.";
    rdfs:domain sync:PredicateMapping, sync:ClassMapping;
    rdfs:range sync:Rule .

sync:predicate a rdf:Property;
    rdfs:label "predicate";
    rdfs:comment "Specifies the RDF predicate that a PropertyMapping applies to.";
    rdfs:domain sync:Rule;
    rdfs:range rdf:Property .

sync:identifyingPredicate a rdf:Property;
    rdfs:label "identifying predicate";
    rdfs:comment "Declares that a specific predicate (or set of predicates) can be used to identify blank nodes within contexts. This enables context-based blank node identification for CRDT operations that require object identity (e.g., OR-Set, 2P-Set tombstone matching). Multiple predicates can be declared to create compound identification keys.";
    rdfs:domain sync:Mapping;
    rdfs:range rdf:Property .
